import streamlit as st
from datetime import datetime

# Helper function to remove a notification
def _remove_notification(index_to_remove):
    """
    Remove uma notifica√ß√£o espec√≠fica da lista de notifica√ß√µes na session_state.
    """
    if 'notifications' in st.session_state and 0 <= index_to_remove < len(st.session_state.notifications):
        st.session_state.notifications.pop(index_to_remove)
        st.rerun()

# Esta fun√ß√£o ser√° chamada pela p√°gina inicial (app_main.py)
def display_notifications_on_home():
    """
    Exibe as notifica√ß√µes na tela inicial do programa, com um bot√£o para excluir cada uma.
    """
    # Removido: Injetar CSS para estilizar o bot√£o de exclus√£o e as notifica√ß√µes
    # st.markdown("""
    # <style>
    # /* Estilo para o container de cada notifica√ß√£o para controlar o espa√ßamento */
    # .notification-item {
    #     margin-bottom: 0px; /* Reduz o espa√ßo entre as notifica√ß√µes para 0px */
    # }

    # .delete-button-container {
    #     display: flex;
    #     align-items: center; /* Centraliza verticalmente o bot√£o */
    #     justify-content: center; /* Centraliza horizontalmente o bot√£o */
    #     height: 100%; /* Garante que o container ocupe a altura da coluna */
    # }

    # .delete-button-container button {
    #     background-color: transparent !important;
    #     color: #ff4b4b !important; /* Cor vermelha para o √≠cone */
    #     border: none !important;
    #     padding: 0.25rem 0.5rem !important;
    #     border-radius: 5px !important;
    #     font-size: 1.2rem !important; /* Tamanho do √≠cone */
    #     cursor: pointer !important;
    #     transition: color 0.2s, background-color 0.2s !important;
    #     display: flex !important;
    #     align-items: center !important;
    #     justify-content: center !important;
    #     height: 100% !important; /* Garante que o bot√£o ocupe a altura da coluna */
    # }
    # .delete-button-container button:hover {
    #     color: #ff0000 !important; /* Vermelho mais escuro ao passar o mouse */
    #     background-color: rgba(255, 75, 75, 0.1) !important; /* Fundo levemente vermelho ao passar o mouse */
    # }
    # .delete-button-container button:focus {
    #     outline: none !important;
    #     box-shadow: none !important;
    # }
    # /* Removido o ajuste de alinhamento vertical dos bot√µes "Adicionar" e "Limpar" */
    # /* div[data-testid="stVerticalBlock"] > div > div > div:nth-child(2) > div {
    #     display: flex;
    #     align-items: flex-end;
    # } */
    # </style>
    # <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    # """, unsafe_allow_html=True)


    if 'notifications' not in st.session_state:
        st.session_state.notifications = []

    if not st.session_state.notifications:
        st.info("Nenhuma notifica√ß√£o recente.")
    else:
        for i, notification in enumerate(st.session_state.notifications):
            # Usar colunas para posicionar o texto da notifica√ß√£o e o bot√£o de exclus√£o lado a lado
            # Removido: Adicionar a classe 'notification-item' para controlar o espa√ßamento
            col_notif_text, col_notif_delete = st.columns([0.9, 0.1]) # 90% para texto, 10% para bot√£o
            with col_notif_text:
                # Removido: Usar um container para a notifica√ß√£o para aplicar a margem inferior
                # st.markdown(f'<div class="notification-item">', unsafe_allow_html=True)
                st.warning(f"**Notifica√ß√£o {i+1}:** {notification}")
                # st.markdown(f'</div>', unsafe_allow_html=True)
            with col_notif_delete:
                # O bot√£o de exclus√£o com √≠cone de lixeira e tooltip
                # Removido: st.markdown(f'<div class="delete-button-container">', unsafe_allow_html=True)
                if st.button("üóëÔ∏è", key=f"delete_notif_{i}", help="Excluir Notifica√ß√£o"): # Adicionado o tooltip (help)
                    _remove_notification(i)
                # Removido: st.markdown(f'</div>', unsafe_allow_html=True)


    # Adicionar bot√µes para gerenciar notifica√ß√µes (opcional, para testes)
    col1, col2 = st.columns(2)
    with col1:
        if st.button("Adicionar Notifica√ß√£o de Teste"):
            st.session_state.notifications.append(f"Novo aviso importante em {datetime.now().strftime('%d/%m/%Y %H:%M:%S')}.")
            st.rerun()
    with col2:
        if st.button("Limpar Notifica√ß√µes"):
            st.session_state.notifications = []
            st.rerun()

# Esta fun√ß√£o √© a original do m√≥dulo, mas n√£o ser√° mais chamada pelo menu lateral.
# Pode ser removida ou adaptada se houver necessidade de uma p√°gina de "Notifica√ß√µes" separada no futuro.
def show_page():
    """
    Fun√ß√£o original da p√°gina de Notifica√ß√µes (agora as notifica√ß√µes s√£o mostradas na Home).
    Pode ser adaptada para um gerenciamento mais avan√ßado de notifica√ß√µes se necess√°rio.
    """
    st.subheader("Gerenciamento Avan√ßado de Notifica√ß√µes")
    st.write("Esta p√°gina pode ser usada para um sistema mais complexo de gerenciamento de notifica√ß√µes,")
    st.write("enquanto os alertas r√°pidos aparecem na tela inicial.")
    # Aqui voc√™ pode adicionar filtros, arquivo de notifica√ß√µes, etc.
